services:
  db:
    image: postgres:15
    environment:
      - POSTGRES_DATABASE=main
      - POSTGRES_PASSWORD=password
    volumes:
      - ./dev/init_db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 3s
      retries: 5
    networks:
      - pakoski_net

  teamservice:
    container_name: teamservice
    build: ./teamservice
    environment:
      - ROOT_PATH=/team
      - DATABASE_URL=postgres://postgres:password@db:5432/teamservice
      - USER_SERVICE_URL=http://userservice:8000/internal
      - USER_SERVICE_API_KEY=apikey
      - JWT_SECRET=dstu
    ports:
      - 8000:8000
    depends_on:
      db:
        condition: service_healthy
    networks:
      - pakoski_net

  userservice:
    container_name: userservice
    build: ./userservice
    environment:
      - ROOT_PATH=/user
      - DATABASE_URL=postgres://postgres:password@db:5432/userservice
      - JWT_SECRET=dstu
      - INTERNAL_API_KEY=apikey
    ports:
      - 8001:8000
    depends_on:
      db:
        condition: service_healthy
    networks:
      - pakoski_net

  nginx:
    image: nginx:latest
    ports:
      - 80:80
    volumes:
      - ./dev/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - userservice
      - teamservice
    networks:
      - pakoski_net

networks:
  pakoski_net: